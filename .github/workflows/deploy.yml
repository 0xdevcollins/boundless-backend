name: 🚀 Deploy Boundless Backend API

# Required GitHub Secrets:
# SSH_PRIVATE_KEY - Your SSH private key for server access
# DEPLOY_USERNAME - SSH username (e.g., atlaswealthltd-www-api)
# DEPLOY_SERVER - Server IP address (e.g., 46.202.195.31)
# DEPLOY_REMOTE_PATH - Remote deployment path (e.g., /home/atlaswealthltd-www-api/htdocs/www.api.atlaswealthltd.org)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🎉 Deploy Node.js API
    runs-on: ubuntu-latest

    steps:
      - name: 🚚 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔨 Build TypeScript
        run: npm run build


      # - name: 🔍 Lint code
      #   run: npm run lint

      - name: 🚀 Deploy to server via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DEPLOY_USERNAME: ${{ secrets.DEPLOY_USERNAME }}
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_REMOTE_PATH: ${{ secrets.DEPLOY_REMOTE_PATH }}
        run: |
          # Setup SSH key
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          
          # Deploy to server
          ssh -i private_key -o StrictHostKeyChecking=no $DEPLOY_USERNAME@$DEPLOY_SERVER << 'EOF'
            set -e
            
            echo "🚀 Starting deployment..."
            
            # Navigate to deployment directory
            cd ${{ secrets.DEPLOY_REMOTE_PATH }}
            
            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git pull origin main
            
            # Install production dependencies
            echo "📦 Installing production dependencies..."
            npm ci --production --no-optional --no-audit --no-fund
            
            # Build the application
            echo "🔨 Building application..."
            npm run build
            
            # Restart PM2 application
            echo "🔄 Restarting application..."
            pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
            
            # Show PM2 status
            echo "📊 Application status:"
            pm2 status
            
            echo "✅ Deployment completed successfully!"
          EOF
          
          # Clean up SSH key
          rm private_key

      - name: ✅ Deployment completed
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "Your Node.js application has been deployed and restarted on the server."
          echo "Consider using PM2 or similar process manager for production"
